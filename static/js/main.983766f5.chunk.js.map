{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","errors","buttonDisabled","onChange","event","target","name","value","setState","Object","keys","filter","some","k","setErrors","clearForm","onSubmit","addMovie","props","preventDefault","currentErrors","urlRegex","test","length","this","action","method","classNames","input","type","placeholder","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.983766f5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n      buttonDisabled: false,\n    },\n  };\n\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => {\n      const buttonDisabled = Object.keys(state.values)\n        .filter(key => key !== 'description')\n        .some(k => !this.state.values[k]);\n\n      return ({\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n        errors: {\n          ...state.errors,\n          [name]: false,\n          buttonDisabled,\n        },\n      });\n    });\n  }\n\n  setErrors = (errors) => {\n    this.setState({ errors });\n  }\n\n  clearForm = () => {\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      errors: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n        buttonDisabled: false,\n      },\n    });\n  }\n\n  onSubmit = (event) => {\n    const { values: {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    } } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    const currentErrors = {\n      buttonDisabled: true,\n    };\n\n    if (!title) {\n      currentErrors.title = true;\n    }\n\n    // eslint-disable-next-line\n    const urlRegex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!imgUrl || !urlRegex.test(imgUrl)) {\n      currentErrors.imgUrl = true;\n    }\n\n    if (!imdbUrl || !urlRegex.test(imdbUrl)) {\n      currentErrors.imdbUrl = true;\n    }\n\n    if (!imdbId) {\n      currentErrors.imdbId = true;\n    }\n\n    if (Object.keys(currentErrors).length > 1) {\n      this.setErrors(currentErrors);\n\n      return;\n    }\n\n    addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.clearForm();\n  };\n\n  render() {\n    const { values, errors } = this.state;\n\n    return (\n      <form\n        action=\"\"\n        method=\"post\"\n        onSubmit={this.onSubmit}\n      >\n        {errors.title && (\n          <span className=\"error\">\n            Please enter a film title\n          </span>\n        )}\n\n        <label className=\"label\">\n          Film Title:\n          <input\n            className={classNames({\n              input: true,\n              'is-danger': errors.title,\n            })}\n            name=\"title\"\n            type=\"text\"\n            value={values.title}\n            placeholder=\"Title\"\n            onChange={this.onChange}\n          />\n        </label>\n\n        <label className=\"label\">\n          Film Description:\n          <input\n            className=\"input\"\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Description\"\n            value={values.description}\n            onChange={this.onChange}\n          />\n        </label>\n\n        {errors.imgUrl && (\n          <span className=\"error\">\n            Please enter an image link\n          </span>\n        )}\n\n        <label className=\"label\">\n          Image link:\n          <input\n            className={classNames({\n              input: true,\n              'is-danger': errors.imgUrl,\n            })}\n            name=\"imgUrl\"\n            type=\"text\"\n            placeholder=\"Image Url\"\n            value={values.imgUrl}\n            onChange={this.onChange}\n          />\n        </label>\n\n        {errors.imdbUrl && (\n          <span className=\"error\">\n            Please enter an IMDB link\n          </span>\n        )}\n\n        <label className=\"label\">\n          IMDB link:\n          <input\n            className={classNames({\n              input: true,\n              'is-danger': errors.imdbUrl,\n            })}\n            name=\"imdbUrl\"\n            type=\"text\"\n            placeholder=\"IMDB Url\"\n            value={values.imdbUrl}\n            onChange={this.onChange}\n          />\n        </label>\n\n        {errors.imdbId && (\n          <span className=\"error\">\n            Please enter an IMDB id\n          </span>\n        )}\n\n        <label className=\"label\">\n          IMDB ID:\n          <input\n            className={classNames({\n              input: true,\n              'is-danger': errors.imdbId,\n            })}\n            name=\"imdbId\"\n            type=\"text\"\n            placeholder=\"IMDB Id\"\n            value={values.imdbId}\n            onChange={this.onChange}\n          />\n        </label>\n\n        <button\n          className=\"button is-warning\"\n          type=\"submit\"\n          disabled={errors.buttonDisabled}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}