{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Form/Form.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Form","values","errors","onChange","onAdd","setErrors","clearForm","action","method","onSubmit","event","preventDefault","currentErrors","buttonDisabled","imageUrlCheck","test","imdbUrlCheck","Object","keys","length","name","type","value","placeholder","disabled","PropTypes","shape","NewMovie","state","target","setState","filter","some","k","this","addMovie","props","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d04dcdf0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.scss';\n\nexport const Form = ({\n  values,\n  errors,\n  onChange,\n  onAdd,\n  setErrors,\n  clearForm,\n}) => {\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const currentErrors = {\n      buttonDisabled: true,\n    };\n\n    if (!values.title) {\n      currentErrors.title = true;\n    }\n\n    // eslint-disable-next-line\n    const imageUrlCheck = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(values.imgUrl);\n\n    if (!values.imgUrl || !imageUrlCheck) {\n      currentErrors.imgUrl = true;\n    }\n\n    // eslint-disable-next-line\n    const imdbUrlCheck = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(values.imdbUrl);\n\n    if (!values.imdbUrl || !imdbUrlCheck) {\n      currentErrors.imdbUrl = true;\n    }\n\n    if (!values.imdbId) {\n      currentErrors.imdbId = true;\n    }\n\n    if (Object.keys(currentErrors).length > 1) {\n      setErrors(currentErrors);\n\n      return;\n    }\n\n    clearForm();\n    onAdd({\n      title: values.title,\n      description: values.description,\n      imgUrl: values.imgUrl,\n      imdbUrl: values.imdbUrl,\n      imdbId: values.imdbId,\n    });\n  };\n\n  return (\n    <form\n      action=\"\"\n      method=\"post\"\n      onSubmit={onSubmit}\n    >\n      {errors.title && (\n        <span className=\"error\">\n          Please enter a film title\n        </span>\n      )}\n\n      <label className=\"label\">\n        Film Title:\n        <input\n          className={`${errors.title ? 'is-danger' : ''} input`}\n          name=\"title\"\n          type=\"text\"\n          value={values.title}\n          placeholder=\"Title\"\n          onChange={onChange}\n        />\n      </label>\n\n      <label className=\"label\">\n        Film Description:\n        <input\n          className=\"input\"\n          name=\"description\"\n          type=\"text\"\n          placeholder=\"Description\"\n          value={values.description}\n          onChange={onChange}\n        />\n      </label>\n\n      {errors.imgUrl && (\n        <span className=\"error\">\n          Please enter an image link\n        </span>\n      )}\n\n      <label className=\"label\">\n        Image link:\n        <input\n          className={`${errors.imgUrl ? 'is-danger' : ''} input`}\n          name=\"imgUrl\"\n          type=\"text\"\n          placeholder=\"Image Url\"\n          value={values.imgUrl}\n          onChange={onChange}\n        />\n      </label>\n\n      {errors.imdbUrl && (\n        <span className=\"error\">\n          Please enter an IMDB link\n        </span>\n      )}\n\n      <label className=\"label\">\n        IMDB link:\n        <input\n          className={`${errors.imdbUrl ? 'is-danger' : ''} input`}\n          name=\"imdbUrl\"\n          type=\"text\"\n          placeholder=\"IMDB Url\"\n          value={values.imdbUrl}\n          onChange={onChange}\n        />\n      </label>\n\n      {errors.imdbId && (\n        <span className=\"error\">\n          Please enter an IMDB id\n        </span>\n      )}\n\n      <label className=\"label\">\n        IMDB ID:\n        <input\n          className={`${errors.imdbId ? 'is-danger' : ''} input`}\n          name=\"imdbId\"\n          type=\"text\"\n          placeholder=\"IMDB Id\"\n          value={values.imdbId}\n          onChange={onChange}\n        />\n      </label>\n\n      <button\n        className=\"button is-warning\"\n        type=\"submit\"\n        disabled={errors.buttonDisabled}\n      >\n        Add new movie\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  clearForm: PropTypes.func.isRequired,\n  setErrors: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  values: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  }).isRequired,\n  errors: PropTypes.shape({\n    title: PropTypes.bool,\n    imgUrl: PropTypes.bool,\n    imdbUrl: PropTypes.bool,\n    imdbId: PropTypes.bool,\n    buttonDisabled: PropTypes.bool,\n  }),\n};\n\nForm.defaultProps = {\n  errors: PropTypes.shape({\n    title: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n    buttonDisabled: false,\n  }),\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form/Form';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n      buttonDisabled: false,\n    },\n  };\n\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => {\n      const buttonDisabled = Object.keys(state.values)\n        .filter(key => key !== 'description')\n        .some(k => !this.state.values[k]);\n\n      return ({\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n        errors: {\n          ...state.errors,\n          [name]: false,\n          buttonDisabled,\n        },\n      });\n    });\n  }\n\n  setErrors = (errors) => {\n    this.setState({ errors });\n  }\n\n  clearForm = () => {\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      errors: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n        buttonDisabled: false,\n      },\n    });\n  }\n\n  render() {\n    const { values, errors } = this.state;\n    const { addMovie } = this.props;\n\n    return (\n      <Form\n        values={values}\n        errors={errors}\n        onChange={this.onChange}\n        onAdd={addMovie}\n        setErrors={this.setErrors}\n        clearForm={this.clearForm}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}